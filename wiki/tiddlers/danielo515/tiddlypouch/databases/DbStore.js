/*\
title: $:/plugins/danielo515/tiddlypouch/DbStore.js
type: application/javascript
module-type: library

Manages insertions, extractions, deletions of tiddlers to a database.

@preserve

\*/
"use strict";module.exports=DbStore;function DbStore(t,e){this.name=t;this._db=e instanceof PouchDB?e:new PouchDB(t);this.logger=new $TPouch.Logger("DbStore:"+t)}DbStore.prototype._Conflict=function t(e){var r=this;return function(t){if(t.status==409){return r.logger.log(e)}throw t}};DbStore.prototype.createIndex=function e(t,r){var n={_id:"_design/"+t,views:{}};n.views[t]={map:r.toString()};this.logger.debug("Creating index"+t+"...");return this._db.put(n).then(this.logger.debug.bind(this.logger,"Index "+t+" created")).catch(this._Conflict("Index "+t+" exists already"))};DbStore.prototype._upsert=function(t){var e=this;return e._db.put(t).then(function(t){return t}).catch(function(r){if(r){if(r.name==="conflict"){e.logger.debug("O my gosh, update conflict!");return e._db.get(t._id).then(function(t){e.logger.log("A real update conflict!",t);throw r}).catch(function(r){if(r.name==="not_found"){e.logger.debug("Fake conflict, trying again",t);t._rev=null;return e._db.put(t)}})}throw r}})};DbStore.prototype._validateRevision=function r(t){if(/\d+-[A-z0-9]*/.test(t)){return t}return null};DbStore.prototype.addTiddler=function(t,e){var r=this;var n=this._convertToCouch(t,e.tiddlerInfo);this.logger.debug("Saving ",n);return r._upsert(n)};DbStore.prototype.deleteTiddler=function(t){var e=this;var r=e._mangleTitle(t);return e._db.get(r).then(function(t){t._deleted=true;return e._db.put(t)}).catch(e.logger.log.bind(e.logger,"Something went wrong deleting "+t))};DbStore.prototype.getTiddler=function(t,e){var r=this;var n=[r._mangleTitle(t)];if(r._validateRevision(e)){n.push({rev:e})}r.logger.debug("Retrieving tiddler ",t," from database");return r._db.get.apply(r._db,n).then(r._convertFromCouch.bind(r)).catch(function(e){r.logger.log("Error getting tiddler "+t+" from DB",e);throw e})};DbStore.prototype.getTiddlers=function(t,e,r){var n=this;var o={include_docs:undefined===r?true:r};if(e){o.key=e}return n._db.query(t,o).then(function(r){n.logger.trace("Query to ",t," searching for ",e," : ",r.rows);return r.rows}).then(function(t){return t.map(function(t){return t.doc?t.doc:{_id:t.id,fields:t.value}})}).then(function(t){return t.map(n._convertFromCouch.bind(n))}).catch(n.logger.log.bind(n.logger))};DbStore.prototype.getTiddlerRevisions=function(t){return this._db.get(this._mangleTitle(t),{revs_info:true}).then(function(t){var n=t._revs_info.filter(e).map(r);return n});function e(t){return t.status==="available"}function r(t){return t.rev}};